     1                                  ;================================================
     2                                  ;=	Created by: Ahmed Ehab Al-kataby.	=
     3                                  ;=	April 6, 2023				=
     4                                  ;================================================
     5                                  
     6                                  
     7                                  ;HERE ARE MACROS
     8                                  %macro print 2		;"print" macro to print in screen.
     9                                  	;Prepare registers(parameters) of write system call function.
    10                                  	mov rbx, 1	;"1" is file descriptor.
    11                                  	mov rcx, %1	;First parameter is passing string pointer.
    12                                  	mov rdx, %2	;Second parameter is passing string length.
    13                                  
    14                                  	;Call system to write pointed string by rcx.
    15                                  	mov rax, 4	;"4" is write system call.
    16                                  	int 80h		;Call kernel.
    17                                  %endmacro	;End of "print" macro.
    18                                  
    19                                  %macro newLine 0	;"newLine" macro to print new line in screen.
    20                                  	mov rbx, 1
    21                                  	mov rcx, LF	;passing character pointer.
    22                                  	mov rdx, 1	;passing "1" because its character!
    23                                  
    24                                  	mov rax, 4
    25                                  	int 80h
    26                                  %endmacro	;End of "newLine" macro.
    27                                  
    28                                  
    29                                  ;HERE ARE PROGRAM SECTIONS
    30                                  section .data
    31                                  ;	Initialized variables and constants are placed here.
    32 00000000 0A00                    	LF db 10, 0		;VARIABLE: Line Feed character to make new line.
    33 00000002 48656C6C6F2C20576F-     	hiMessage db 'Hello, World!', 0	;VARIABLE: String message to be printed.
    33 0000000B 726C642100         
    34                                  	length equ $ - hiMessage	;CONSTANTS: Length of string message.
    35                                  
    36                                  section .text
    37                                  ;	Code is placed here.
    38                                  	global exit	;Declared an exit procedure.
    39                                  	global _start	;Declared an entry point procedure.
    40                                  
    41                                  exit:	;Defind exit procedure.
    42 00000000 B801000000              	mov rax, 1	;"1" is exit system call.
    43 00000005 BA00000000              	mov rdx, 0	;Return 0 to system in successfully ending.
    44 0000000A CD80                    	int 80h		;Call kernel.
    45                                  ;End of exit procedure.
    46                                  
    47                                  _start:	;Defind entry point procedure.
    48                                  	print hiMessage, length	;Use print macro with passing arguments.
    48                              <1> 
    48 0000000C BB01000000          <1>  mov rbx, 1
    48 00000011 48B9-               <1>  mov rcx, %1
    48 00000013 [0200000000000000]  <1>
    48 0000001B BA0E000000          <1>  mov rdx, %2
    48                              <1> 
    48                              <1> 
    48 00000020 B804000000          <1>  mov rax, 4
    48 00000025 CD80                <1>  int 80h
    49                                  	newLine			;Make new line.
    49 00000027 BB01000000          <1>  mov rbx, 1
    49 0000002C 48B9-               <1>  mov rcx, LF
    49 0000002E [0000000000000000]  <1>
    49 00000036 BA01000000          <1>  mov rdx, 1
    49                              <1> 
    49 0000003B B804000000          <1>  mov rax, 4
    49 00000040 CD80                <1>  int 80h
    50 00000042 E8B9FFFFFF              	call exit		;Call exit procedure to end program.
    51                                  ;End of _start procedure.
